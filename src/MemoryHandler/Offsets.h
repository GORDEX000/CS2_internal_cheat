#pragma once
#include <cstdint>


namespace Offsets
{
    class ClientDll {
    public:
        static constexpr uintptr_t dwCSGOInput = 0x1E2B4F0;
        static constexpr uintptr_t dwEntityList = 0x1D042D8;
        static constexpr uintptr_t dwGameEntitySystem = 0x1FA51C8;
        static constexpr uintptr_t dwGameEntitySystem_highestEntityIndex = 0x20F0;
        static constexpr uintptr_t dwGameRules = 0x1E20338;
        static constexpr uintptr_t dwGlobalVars = 0x1BD4FA0;
        static constexpr uintptr_t dwGlowManager = 0x1E1D1D8;
        static constexpr uintptr_t dwLocalPlayerController = 0x1E0D3E8;
        static constexpr uintptr_t dwLocalPlayerPawn = 0x1BDFD10;
        static constexpr uintptr_t dwPlantedC4 = 0x1E25A58;
        static constexpr uintptr_t dwPrediction = 0x1BDFC40;
        static constexpr uintptr_t dwSensitivity = 0x1E1DC38;
        static constexpr uintptr_t dwSensitivity_sensitivity = 0x48;
        static constexpr uintptr_t dwViewAngles = 0x1E2BBA0;
        static constexpr uintptr_t dwViewMatrix = 0x1E21090;
        static constexpr uintptr_t dwViewRender = 0x1E21EB0;
        static constexpr uintptr_t dwWeaponC4 = 0x1DBE948;
    };

    class C_BaseEntity
    {
    public:
        static constexpr uintptr_t m_CBodyComponent = 0x38; // CBodyComponent*
        static constexpr uintptr_t m_NetworkTransmitComponent = 0x40; // CNetworkTransmitComponent
        static constexpr uintptr_t m_nLastThinkTick = 0x328; // GameTick_t
        static constexpr uintptr_t m_pGameSceneNode = 0x330; // CGameSceneNode*
        static constexpr uintptr_t m_pRenderComponent = 0x338; // CRenderComponent*
        static constexpr uintptr_t m_pCollision = 0x340; // CCollisionProperty*
        static constexpr uintptr_t m_iMaxHealth = 0x348; // int32
        static constexpr uintptr_t m_iHealth = 0x34C; // int32
        static constexpr uintptr_t m_lifeState = 0x350; // uint8
        static constexpr uintptr_t m_bTakesDamage = 0x351; // bool
        static constexpr uintptr_t m_nTakeDamageFlags = 0x358; // TakeDamageFlags_t
        static constexpr uintptr_t m_nPlatformType = 0x360; // EntityPlatformTypes_t
        static constexpr uintptr_t m_ubInterpolationFrame = 0x361; // uint8
        static constexpr uintptr_t m_hSceneObjectController = 0x364; // CHandle<C_BaseEntity>
        static constexpr uintptr_t m_nNoInterpolationTick = 0x368; // int32
        static constexpr uintptr_t m_nVisibilityNoInterpolationTick = 0x36C; // int32
        static constexpr uintptr_t m_flProxyRandomValue = 0x370; // float32
        static constexpr uintptr_t m_iEFlags = 0x374; // int32
        static constexpr uintptr_t m_nWaterType = 0x378; // uint8
        static constexpr uintptr_t m_bInterpolateEvenWithNoModel = 0x379; // bool
        static constexpr uintptr_t m_bPredictionEligible = 0x37A; // bool
        static constexpr uintptr_t m_bApplyLayerMatchIDToModel = 0x37B; // bool
        static constexpr uintptr_t m_tokLayerMatchID = 0x37C; // CUtlStringToken
        static constexpr uintptr_t m_nSubclassID = 0x380; // CUtlStringToken
        static constexpr uintptr_t m_nSimulationTick = 0x390; // int32
        static constexpr uintptr_t m_iCurrentThinkContext = 0x394; // int32
        static constexpr uintptr_t m_aThinkFunctions = 0x398; // CUtlVector<thinkfunc_t>
        static constexpr uintptr_t m_bDisabledContextThinks = 0x3B0; // bool
        static constexpr uintptr_t m_flAnimTime = 0x3B4; // float32
        static constexpr uintptr_t m_flSimulationTime = 0x3B8; // float32
        static constexpr uintptr_t m_nSceneObjectOverrideFlags = 0x3BC; // uint8
        static constexpr uintptr_t m_bHasSuccessfullyInterpolated = 0x3BD; // bool
        static constexpr uintptr_t m_bHasAddedVarsToInterpolation = 0x3BE; // bool
        static constexpr uintptr_t m_bRenderEvenWhenNotSuccessfullyInterpolated = 0x3BF; // bool
        static constexpr uintptr_t m_nInterpolationLatchDirtyFlags = 0x3C0; // int32[2]
        static constexpr uintptr_t m_ListEntry = 0x3C8; // uint16[11]
        static constexpr uintptr_t m_flCreateTime = 0x3E0; // GameTime_t
        static constexpr uintptr_t m_flSpeed = 0x3E4; // float32
        static constexpr uintptr_t m_EntClientFlags = 0x3E8; // uint16
        static constexpr uintptr_t m_bClientSideRagdoll = 0x3EA; // bool
        static constexpr uintptr_t m_iTeamNum = 0x3EB; // uint8
        static constexpr uintptr_t m_spawnflags = 0x3EC; // uint32
        static constexpr uintptr_t m_nNextThinkTick = 0x3F0; // GameTick_t
        static constexpr uintptr_t m_fFlags = 0x3F8; // uint32
        static constexpr uintptr_t m_vecAbsVelocity = 0x3FC; // Vector
        static constexpr uintptr_t m_vecServerVelocity = 0x408; // CNetworkVelocityVector
        static constexpr uintptr_t m_vecVelocity = 0x430; // CNetworkVelocityVector
        static constexpr uintptr_t m_vecBaseVelocity = 0x510; // Vector
        static constexpr uintptr_t m_hEffectEntity = 0x51C; // CHandle<C_BaseEntity>
        static constexpr uintptr_t m_hOwnerEntity = 0x520; // CHandle<C_BaseEntity>
        static constexpr uintptr_t m_MoveCollide = 0x524; // MoveCollide_t
        static constexpr uintptr_t m_MoveType = 0x525; // MoveType_t
        static constexpr uintptr_t m_nActualMoveType = 0x526; // MoveType_t
        static constexpr uintptr_t m_flWaterLevel = 0x528; // float32
        static constexpr uintptr_t m_fEffects = 0x52C; // uint32
        static constexpr uintptr_t m_hGroundEntity = 0x530; // CHandle<C_BaseEntity>
        static constexpr uintptr_t m_nGroundBodyIndex = 0x534; // int32
        static constexpr uintptr_t m_flFriction = 0x538; // float32
        static constexpr uintptr_t m_flElasticity = 0x53C; // float32
        static constexpr uintptr_t m_flGravityScale = 0x540; // float32
        static constexpr uintptr_t m_flTimeScale = 0x544; // float32
        static constexpr uintptr_t m_bAnimatedEveryTick = 0x548; // bool
        static constexpr uintptr_t m_bGravityDisabled = 0x549; // bool
        static constexpr uintptr_t m_flNavIgnoreUntilTime = 0x54C; // GameTime_t
        static constexpr uintptr_t m_hThink = 0x550; // uint16
        static constexpr uintptr_t m_fBBoxVisFlags = 0x560; // uint8
        static constexpr uintptr_t m_flActualGravityScale = 0x564; // float32
        static constexpr uintptr_t m_bGravityActuallyDisabled = 0x568; // bool
        static constexpr uintptr_t m_bPredictable = 0x569; // bool
        static constexpr uintptr_t m_bRenderWithViewModels = 0x56A; // bool
        static constexpr uintptr_t m_nFirstPredictableCommand = 0x56C; // int32
        static constexpr uintptr_t m_nLastPredictableCommand = 0x570; // int32
        static constexpr uintptr_t m_hOldMoveParent = 0x574; // CHandle<C_BaseEntity>
        static constexpr uintptr_t m_Particles = 0x578; // CParticleProperty
        static constexpr uintptr_t m_vecAngVelocity = 0x5A8; // QAngle
        static constexpr uintptr_t m_DataChangeEventRef = 0x5B4; // int32
        static constexpr uintptr_t m_dependencies = 0x5B8; // CUtlVector<CEntityHandle>
        static constexpr uintptr_t m_nCreationTick = 0x5D0; // int32
        static constexpr uintptr_t m_bAnimTimeChanged = 0x5DD; // bool
        static constexpr uintptr_t m_bSimulationTimeChanged = 0x5DE; // bool
        static constexpr uintptr_t m_sUniqueHammerID = 0x5E8; // CUtlString
        static constexpr uintptr_t m_nBloodType = 0x5F0; // BloodType
    };

    class C_CSPlayerPawn {
    public:
       static constexpr uintptr_t m_pBulletServices = 0x1690; // CCSPlayer_BulletServices*
       static constexpr uintptr_t m_pHostageServices = 0x1698; // CCSPlayer_HostageServices*
       static constexpr uintptr_t m_pBuyServices = 0x16A0; // CCSPlayer_BuyServices*
       static constexpr uintptr_t m_pGlowServices = 0x16A8; // CCSPlayer_GlowServices*
       static constexpr uintptr_t m_pActionTrackingServices = 0x16B0; // CCSPlayer_ActionTrackingServices*
       static constexpr uintptr_t m_pDamageReactServices = 0x16B8; // CCSPlayer_DamageReactServices*
       static constexpr uintptr_t m_flHealthShotBoostExpirationTime = 0x16C0; // GameTime_t
       static constexpr uintptr_t m_flLastFiredWeaponTime = 0x16C4; // GameTime_t
       static constexpr uintptr_t m_bHasFemaleVoice = 0x16C8; // bool
       static constexpr uintptr_t m_flLandingTimeSeconds = 0x16CC; // float32
       static constexpr uintptr_t m_flOldFallVelocity = 0x16D0; // float32
       static constexpr uintptr_t m_szLastPlaceName = 0x16D4; // char[18]
       static constexpr uintptr_t m_bPrevDefuser = 0x16E6; // bool
       static constexpr uintptr_t m_bPrevHelmet = 0x16E7; // bool
       static constexpr uintptr_t m_nPrevArmorVal = 0x16E8; // int32
       static constexpr uintptr_t m_nPrevGrenadeAmmoCount = 0x16EC; // int32
       static constexpr uintptr_t m_unPreviousWeaponHash = 0x16F0; // uint32
       static constexpr uintptr_t m_unWeaponHash = 0x16F4; // uint32
       static constexpr uintptr_t m_bInBuyZone = 0x16F8; // bool
       static constexpr uintptr_t m_bPreviouslyInBuyZone = 0x16F9; // bool
       static constexpr uintptr_t m_aimPunchAngle = 0x16FC; // QAngle
       static constexpr uintptr_t m_aimPunchAngleVel = 0x1708; // QAngle
       static constexpr uintptr_t m_aimPunchTickBase = 0x1714; // GameTick_t
       static constexpr uintptr_t m_aimPunchTickFraction = 0x1718; // float32
       static constexpr uintptr_t m_aimPunchCache = 0x1720; // CUtlVector<QAngle>
       static constexpr uintptr_t m_bInLanding = 0x1740; // bool
       static constexpr uintptr_t m_flLandingStartTime = 0x1744; // float32
       static constexpr uintptr_t m_bInHostageRescueZone = 0x1748; // bool
       static constexpr uintptr_t m_bInBombZone = 0x1749; // bool
       static constexpr uintptr_t m_bIsBuyMenuOpen = 0x174A; // bool
       static constexpr uintptr_t m_flTimeOfLastInjury = 0x174C; // GameTime_t
       static constexpr uintptr_t m_flNextSprayDecalTime = 0x1750; // GameTime_t
       static constexpr uintptr_t m_iRetakesOffering = 0x18A8; // int32
       static constexpr uintptr_t m_iRetakesOfferingCard = 0x18AC; // int32
       static constexpr uintptr_t m_bRetakesHasDefuseKit = 0x18B0; // bool
       static constexpr uintptr_t m_bRetakesMVPLastRound = 0x18B1; // bool
       static constexpr uintptr_t m_iRetakesMVPBoostItem = 0x18B4; // int32
       static constexpr uintptr_t m_RetakesMVPBoostExtraUtility = 0x18B8; // loadout_slot_t
       static constexpr uintptr_t m_bNeedToReApplyGloves = 0x18BD; // bool
       static constexpr uintptr_t m_EconGloves = 0x18C0; // C_EconItemView
       static constexpr uintptr_t m_nEconGlovesChanged = 0x1D38; // uint8
       static constexpr uintptr_t m_bMustSyncRagdollState = 0x1D39; // bool
       static constexpr uintptr_t m_nRagdollDamageBone = 0x1D3C; // int32
       static constexpr uintptr_t m_vRagdollDamageForce = 0x1D40; // Vector
       static constexpr uintptr_t m_vRagdollDamagePosition = 0x1D4C; // Vector
       static constexpr uintptr_t m_szRagdollDamageWeaponName = 0x1D58; // char[64]
       static constexpr uintptr_t m_bRagdollDamageHeadshot = 0x1D98; // bool
       static constexpr uintptr_t m_vRagdollServerOrigin = 0x1D9C; // Vector
       static constexpr uintptr_t m_bLastHeadBoneTransformIsValid = 0x2418; // bool
       static constexpr uintptr_t m_lastLandTime = 0x241C; // GameTime_t
       static constexpr uintptr_t m_bOnGroundLastTick = 0x2420; // bool
       static constexpr uintptr_t m_hHudModelArms = 0x243C; // CHandle<C_CS2HudModelArms>
       static constexpr uintptr_t m_qDeathEyeAngles = 0x2440; // QAngle
       static constexpr uintptr_t m_bSkipOneHeadConstraintUpdate = 0x244C; // bool
       static constexpr uintptr_t m_bLeftHanded = 0x244D; // bool
       static constexpr uintptr_t m_fSwitchedHandednessTime = 0x2450; // GameTime_t
       static constexpr uintptr_t m_flViewmodelOffsetX = 0x2454; // float32
       static constexpr uintptr_t m_flViewmodelOffsetY = 0x2458; // float32
       static constexpr uintptr_t m_flViewmodelOffsetZ = 0x245C; // float32
       static constexpr uintptr_t m_flViewmodelFOV = 0x2460; // float32
       static constexpr uintptr_t m_vecPlayerPatchEconIndices = 0x2464; // uint32[5]
       static constexpr uintptr_t m_GunGameImmunityColor = 0x2498; // Color
       static constexpr uintptr_t m_vecBulletHitModels = 0x24E8; // CUtlVector<C_BulletHitModel*>
       static constexpr uintptr_t m_bIsWalking = 0x2500; // bool
       static constexpr uintptr_t m_thirdPersonHeading = 0x2508; // QAngle
       static constexpr uintptr_t m_flSlopeDropOffset = 0x2598; // float32
       static constexpr uintptr_t m_flSlopeDropHeight = 0x2610; // float32
       static constexpr uintptr_t m_vHeadConstraintOffset = 0x2688; // Vector
       static constexpr uintptr_t m_entitySpottedState = 0x2718; // EntitySpottedState_t
       static constexpr uintptr_t m_bIsScoped = 0x2730; // bool
       static constexpr uintptr_t m_bResumeZoom = 0x2731; // bool
       static constexpr uintptr_t m_bIsDefusing = 0x2732; // bool
       static constexpr uintptr_t m_bIsGrabbingHostage = 0x2733; // bool
       static constexpr uintptr_t m_iBlockingUseActionInProgress = 0x2734; // CSPlayerBlockingUseAction_t
       static constexpr uintptr_t m_flEmitSoundTime = 0x2738; // GameTime_t
       static constexpr uintptr_t m_bInNoDefuseArea = 0x273C; // bool
       static constexpr uintptr_t m_nWhichBombZone = 0x2740; // int32
       static constexpr uintptr_t m_iShotsFired = 0x2744; // int32
       static constexpr uintptr_t m_flFlinchStack = 0x2748; // float32
       static constexpr uintptr_t m_flVelocityModifier = 0x274C; // float32
       static constexpr uintptr_t m_flHitHeading = 0x2750; // float32
       static constexpr uintptr_t m_nHitBodyPart = 0x2754; // int32
       static constexpr uintptr_t m_bWaitForNoAttack = 0x2758; // bool
       static constexpr uintptr_t m_ignoreLadderJumpTime = 0x275C; // float32
       static constexpr uintptr_t m_bKilledByHeadshot = 0x2761; // bool
       static constexpr uintptr_t m_ArmorValue = 0x2764; // int32
       static constexpr uintptr_t m_unCurrentEquipmentValue = 0x2768; // uint16
       static constexpr uintptr_t m_unRoundStartEquipmentValue = 0x276A; // uint16
       static constexpr uintptr_t m_unFreezetimeEndEquipmentValue = 0x276C; // uint16
       static constexpr uintptr_t m_nLastKillerIndex = 0x2770; // CEntityIndex
       static constexpr uintptr_t m_bOldIsScoped = 0x2774; // bool
       static constexpr uintptr_t m_bHasDeathInfo = 0x2775; // bool
       static constexpr uintptr_t m_flDeathInfoTime = 0x2778; // float32
       static constexpr uintptr_t m_vecDeathInfoOrigin = 0x277C; // Vector
       static constexpr uintptr_t m_grenadeParameterStashTime = 0x278C; // GameTime_t
       static constexpr uintptr_t m_bGrenadeParametersStashed = 0x2790; // bool
       static constexpr uintptr_t m_angStashedShootAngles = 0x2794; // QAngle
       static constexpr uintptr_t m_vecStashedGrenadeThrowPosition = 0x27A0; // Vector
       static constexpr uintptr_t m_vecStashedVelocity = 0x27AC; // Vector
       static constexpr uintptr_t m_angShootAngleHistory = 0x27B8; // QAngle[2]
       static constexpr uintptr_t m_vecThrowPositionHistory = 0x27D0; // Vector[2]
       static constexpr uintptr_t m_vecVelocityHistory = 0x27E8; // Vector[2]
       static constexpr uintptr_t m_PredictedDamageTags = 0x2800; // C_UtlVectorEmbeddedNetworkVar<PredictedDamageTag_t>
       static constexpr uintptr_t m_nPrevHighestReceivedDamageTagTick = 0x2868; // GameTick_t
       static constexpr uintptr_t m_nHighestAppliedDamageTagTick = 0x286C; // int32
       static constexpr uintptr_t m_bShouldAutobuyDMWeapons = 0x3D9C; // bool
       static constexpr uintptr_t m_fImmuneToGunGameDamageTime = 0x3DA0; // GameTime_t
       static constexpr uintptr_t m_bGunGameImmunity = 0x3DA4; // bool
       static constexpr uintptr_t m_fImmuneToGunGameDamageTimeLast = 0x3DA8; // GameTime_t
       static constexpr uintptr_t m_fMolotovDamageTime = 0x3DAC; // float32
       static constexpr uintptr_t m_vecLastAliveLocalVelocity = 0x3DB4; // Vector
       static constexpr uintptr_t m_fRenderingClipPlane = 0x3DC0; // float32[4]
       static constexpr uintptr_t m_nLastClipPlaneSetupFrame = 0x3DD0; // int32
       static constexpr uintptr_t m_vecLastClipCameraPos = 0x3DD4; // Vector
       static constexpr uintptr_t m_vecLastClipCameraForward = 0x3DE0; // Vector
       static constexpr uintptr_t m_bClipHitStaticWorld = 0x3DEC; // bool
       static constexpr uintptr_t m_bCachedPlaneIsValid = 0x3DED; // bool
       static constexpr uintptr_t m_pClippingWeapon = 0x3DF0; // C_CSWeaponBase*
       static constexpr uintptr_t m_nPlayerInfernoBodyFx = 0x3DF8; // ParticleIndex_t
       static constexpr uintptr_t m_angEyeAngles = 0x3E00; // QAngle
       static constexpr uintptr_t m_arrOldEyeAnglesTimes = 0x3E90; // GameTime_t[4]
       static constexpr uintptr_t m_arrOldEyeAngles = 0x3EA0; // QAngle[4]
       static constexpr uintptr_t m_angEyeAnglesVelocity = 0x3ED0; // QAngle
       static constexpr uintptr_t m_iIDEntIndex = 0x3EDC; // CEntityIndex
       static constexpr uintptr_t m_delayTargetIDTimer = 0x3EE0; // CountdownTimer
       static constexpr uintptr_t m_iTargetItemEntIdx = 0x3EF8; // CEntityIndex
       static constexpr uintptr_t m_iOldIDEntIndex = 0x3EFC; // CEntityIndex
       static constexpr uintptr_t m_holdTargetIDTimer = 0x3F00; // CountdownTimer
    };

    class C_BasePlayerPawn {
    public:
        static constexpr uintptr_t m_pWeaponServices = 0x1408; // CPlayer_WeaponServices*
        static constexpr uintptr_t m_pItemServices = 0x1410; // CPlayer_ItemServices*
        static constexpr uintptr_t m_pAutoaimServices = 0x1418; // CPlayer_AutoaimServices*
        static constexpr uintptr_t m_pObserverServices = 0x1420; // CPlayer_ObserverServices*
        static constexpr uintptr_t m_pWaterServices = 0x1428; // CPlayer_WaterServices*
        static constexpr uintptr_t m_pUseServices = 0x1430; // CPlayer_UseServices*
        static constexpr uintptr_t m_pFlashlightServices = 0x1438; // CPlayer_FlashlightServices*
        static constexpr uintptr_t m_pCameraServices = 0x1440; // CPlayer_CameraServices*
        static constexpr uintptr_t m_pMovementServices = 0x1448; // CPlayer_MovementServices*
        static constexpr uintptr_t m_ServerViewAngleChanges = 0x1458; // C_UtlVectorEmbeddedNetworkVar<ViewAngleServerChange_t>
        static constexpr uintptr_t v_angle = 0x14C0; // QAngle
        static constexpr uintptr_t v_anglePrevious = 0x14CC; // QAngle
        static constexpr uintptr_t m_iHideHUD = 0x14D8; // uint32
        static constexpr uintptr_t m_skybox3d = 0x14E0; // sky3dparams_t
        static constexpr uintptr_t m_flDeathTime = 0x1570; // GameTime_t
        static constexpr uintptr_t m_vecPredictionError = 0x1574; // Vector
        static constexpr uintptr_t m_flPredictionErrorTime = 0x1580; // GameTime_t
        static constexpr uintptr_t m_vecLastCameraSetupLocalOrigin = 0x15A0; // Vector
        static constexpr uintptr_t m_flLastCameraSetupTime = 0x15AC; // GameTime_t
        static constexpr uintptr_t m_flFOVSensitivityAdjust = 0x15B0; // float32
        static constexpr uintptr_t m_flMouseSensitivity = 0x15B4; // float32
        static constexpr uintptr_t m_vOldOrigin = 0x15B8; // Vector
        static constexpr uintptr_t m_flOldSimulationTime = 0x15C4; // float32
        static constexpr uintptr_t m_nLastExecutedCommandNumber = 0x15C8; // int32
        static constexpr uintptr_t m_nLastExecutedCommandTick = 0x15CC; // int32
        static constexpr uintptr_t m_hController = 0x15D0; // CHandle<CBasePlayerController>
        static constexpr uintptr_t m_hDefaultController = 0x15D4; // CHandle<CBasePlayerController>
        static constexpr uintptr_t m_bIsSwappingToPredictableController = 0x15D8; // bool
    };

    class CCSPlayerController {
    public:
        static constexpr uintptr_t m_pInGameMoneyServices = 0x7F8; // CCSPlayerController_InGameMoneyServices*
        static constexpr uintptr_t m_pInventoryServices = 0x800; // CCSPlayerController_InventoryServices*
        static constexpr uintptr_t m_pActionTrackingServices = 0x808; // CCSPlayerController_ActionTrackingServices*
        static constexpr uintptr_t m_pDamageServices = 0x810; // CCSPlayerController_DamageServices*
        static constexpr uintptr_t m_iPing = 0x818; // uint32
        static constexpr uintptr_t m_bHasCommunicationAbuseMute = 0x81C; // bool
        static constexpr uintptr_t m_uiCommunicationMuteFlags = 0x820; // uint32
        static constexpr uintptr_t m_szCrosshairCodes = 0x828; // CUtlSymbolLarge
        static constexpr uintptr_t m_iPendingTeamNum = 0x830; // uint8
        static constexpr uintptr_t m_flForceTeamTime = 0x834; // GameTime_t
        static constexpr uintptr_t m_iCompTeammateColor = 0x838; // int32
        static constexpr uintptr_t m_bEverPlayedOnTeam = 0x83C; // bool
        static constexpr uintptr_t m_flPreviousForceJoinTeamTime = 0x840; // GameTime_t
        static constexpr uintptr_t m_szClan = 0x848; // CUtlSymbolLarge
        static constexpr uintptr_t m_sSanitizedPlayerName = 0x850; // CUtlString
        static constexpr uintptr_t m_iCoachingTeam = 0x858; // int32
        static constexpr uintptr_t m_nPlayerDominated = 0x860; // uint64
        static constexpr uintptr_t m_nPlayerDominatingMe = 0x868; // uint64
        static constexpr uintptr_t m_iCompetitiveRanking = 0x870; // int32
        static constexpr uintptr_t m_iCompetitiveWins = 0x874; // int32
        static constexpr uintptr_t m_iCompetitiveRankType = 0x878; // int8
        static constexpr uintptr_t m_iCompetitiveRankingPredicted_Win = 0x87C; // int32
        static constexpr uintptr_t m_iCompetitiveRankingPredicted_Loss = 0x880; // int32
        static constexpr uintptr_t m_iCompetitiveRankingPredicted_Tie = 0x884; // int32
        static constexpr uintptr_t m_nEndMatchNextMapVote = 0x888; // int32
        static constexpr uintptr_t m_unActiveQuestId = 0x88C; // uint16
        static constexpr uintptr_t m_rtActiveMissionPeriod = 0x890; // uint32
        static constexpr uintptr_t m_nQuestProgressReason = 0x894; // QuestProgress::Reason
        static constexpr uintptr_t m_unPlayerTvControlFlags = 0x898; // uint32
        static constexpr uintptr_t m_iDraftIndex = 0x8C8; // int32
        static constexpr uintptr_t m_msQueuedModeDisconnectionTimestamp = 0x8CC; // uint32
        static constexpr uintptr_t m_uiAbandonRecordedReason = 0x8D0; // uint32
        static constexpr uintptr_t m_eNetworkDisconnectionReason = 0x8D4; // uint32
        static constexpr uintptr_t m_bCannotBeKicked = 0x8D8; // bool
        static constexpr uintptr_t m_bEverFullyConnected = 0x8D9; // bool
        static constexpr uintptr_t m_bAbandonAllowsSurrender = 0x8DA; // bool
        static constexpr uintptr_t m_bAbandonOffersInstantSurrender = 0x8DB; // bool
        static constexpr uintptr_t m_bDisconnection1MinWarningPrinted = 0x8DC; // bool
        static constexpr uintptr_t m_bScoreReported = 0x8DD; // bool
        static constexpr uintptr_t m_nDisconnectionTick = 0x8E0; // int32
        static constexpr uintptr_t m_bControllingBot = 0x8F0; // bool
        static constexpr uintptr_t m_bHasControlledBotThisRound = 0x8F1; // bool
        static constexpr uintptr_t m_bHasBeenControlledByPlayerThisRound = 0x8F2; // bool
        static constexpr uintptr_t m_nBotsControlledThisRound = 0x8F4; // int32
        static constexpr uintptr_t m_bCanControlObservedBot = 0x8F8; // bool
        static constexpr uintptr_t m_hPlayerPawn = 0x8FC; // CHandle<C_CSPlayerPawn>
        static constexpr uintptr_t m_hObserverPawn = 0x900; // CHandle<C_CSObserverPawn>
        static constexpr uintptr_t m_bPawnIsAlive = 0x904; // bool
        static constexpr uintptr_t m_iPawnHealth = 0x908; // uint32
        static constexpr uintptr_t m_iPawnArmor = 0x90C; // int32
        static constexpr uintptr_t m_bPawnHasDefuser = 0x910; // bool
        static constexpr uintptr_t m_bPawnHasHelmet = 0x911; // bool
        static constexpr uintptr_t m_nPawnCharacterDefIndex = 0x912; // uint16
        static constexpr uintptr_t m_iPawnLifetimeStart = 0x914; // int32
        static constexpr uintptr_t m_iPawnLifetimeEnd = 0x918; // int32
        static constexpr uintptr_t m_iPawnBotDifficulty = 0x91C; // int32
        static constexpr uintptr_t m_hOriginalControllerOfCurrentPawn = 0x920; // CHandle<CCSPlayerController>
        static constexpr uintptr_t m_iScore = 0x924; // int32
        static constexpr uintptr_t m_recentKillQueue = 0x928; // uint8[8]
        static constexpr uintptr_t m_nFirstKill = 0x930; // uint8
        static constexpr uintptr_t m_nKillCount = 0x931; // uint8
        static constexpr uintptr_t m_bMvpNoMusic = 0x932; // bool
        static constexpr uintptr_t m_eMvpReason = 0x934; // int32
        static constexpr uintptr_t m_iMusicKitID = 0x938; // int32
        static constexpr uintptr_t m_iMusicKitMVPs = 0x93C; // int32
        static constexpr uintptr_t m_iMVPs = 0x940; // int32
        static constexpr uintptr_t m_bIsPlayerNameDirty = 0x944; // bool
        static constexpr uintptr_t m_bFireBulletsSeedSynchronized = 0x945; // bool
    };

}